<template>
  <div>
    <el-table
      ref="multipleTable"
      :data="tableData"
      style="width: 100%"
      @selection-change="handleSelectionChange"
    >
      <el-table-column type="selection" width="75"> </el-table-column>
      <el-table-column property="name" label="Product" sortable>
      </el-table-column>
      <el-table-column
        property="subcategory.category.name"
        label="Category"
        sortable
      >
      </el-table-column>
      <el-table-column property="subcategory.name" label="Subcategory" sortable>
      </el-table-column>
    </el-table>
    <div style="margin-top: 20px">
      <el-select v-model="value" clearable placeholder="Select">
        <el-option
          v-for="item in categoryOptions"
          :key="item.value"
          :label="item.label"
          :value="item.value"
        >
        </el-option>
      </el-select>
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      tableData: [],
      multipleSelection: [],
      categoryOptions: [
        {
          value: "Option1",
          label: "Option1"
        }
      ]
    };
  },
  methods: {
    toggleSelection(rows) {
      if (rows) {
        rows.forEach(row => {
          this.$refs.multipleTable.toggleRowSelection(row);
        });
      } else {
        this.$refs.multipleTable.clearSelection();
      }
    },
    handleSelectionChange(val) {
      this.multipleSelection = val;
    },
    getProducts() {
      var api = "http://127.0.0.1:8000/api/store/products/?limit=100";
      this.axios.get(api).then(response => {
        this.tableData = response.data.results;
      });
    }
  },
  mounted() {
    this.getProducts();
  }
};
</script>
